{"version":3,"sources":["components/persons-form.js","components/person.js","components/persons.js","components/filter.js","components/notification.js","services/persons.js","App.js","index.js"],"names":["PersonsForm","addPerson","handleNameChange","handlePhoneChange","newPhone","newName","onSubmit","value","onChange","type","Person","name","number","remove","onClick","Persons","persons","map","p","id","Filter","handleSearch","search","Notification","message","estilo","className","api_url","App","useState","setPersons","setNewName","setNewPhone","setSearch","notification","setNotification","useEffect","axios","get","then","r","data","personsToShow","length","filter","toLowerCase","indexOf","e","target","event","newPerson","preventDefault","find","window","confirm","auxName","updatedPerson","person","put","update","noty","setTimeout","catch","post","concat","delete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf18a97c.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonsForm = ({addPerson, handleNameChange, handlePhoneChange, newPhone, newName}) => {\n  return (\n    <div>\n      <h2>Add person</h2>\n      <form onSubmit={addPerson}>\n          <div>\n            name: <input value={newName} onChange={handleNameChange} />\n          </div>\n          <div>\n            phone: <input value={newPhone} onChange={handlePhoneChange} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n    </div>\n  )\n}\nexport default PersonsForm","import React from 'react'\n\nconst Person = ({name, number, remove}) => (<div>{name} {number} <button onClick={remove}>delete</button></div>)\n\nexport default Person","import React from 'react'\nimport Person from './person'\n\nconst Persons = ({persons, remove}) => {\n  return (\n  persons.map(p => {\n    return <Person key={p.name} name={p.name} number={p.number} remove={() => remove(p.id, p.name)} />\n  })\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({handleSearch, search}) => {\n  return (\n    <div>\n      filter shown with <input value={search} onChange={handleSearch} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\nconst Notification = ({ message, estilo }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={estilo}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst api_url = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(api_url)\n    return request.then(r => r.data )\n}\n\nconst create = newPerson => {\n  const request = axios.post(api_url, newPerson)\n    return request.then(r => r.data )\n}\n\nconst update = ({person, id}) => {\n  const request = axios.put(`${api_url}/${id}`, person)\n    return request.then(r => r.data )\n}\n\nconst remove = id => {\n  const request = axios.delete(`${api_url}/${id}`)\n  return request.then(r => r.data)\n}\nexport {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport PersonsForm from './components/persons-form'\nimport Persons from './components/persons'\nimport Filter from './components/filter'\nimport Notification from './components/notification'\nimport {create, getAll, remove, update} from './services/persons'\n\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [search, setSearch] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    getAll()\n      .then((data) => {\n          setPersons(data)\n      })\n  },[])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if(persons.find(p => p.name.toLowerCase() === newName.toLowerCase())) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new once`)) {\n        const auxName = persons.find(p => p.name === newName)\n        const updatedPerson = {...auxName, number: newPhone}\n        update({id: auxName.id, person:updatedPerson})\n          .then(data => {\n            setPersons(persons.map(p => p.id !== auxName.id ? p : data))\n            setNewName('')\n            setNewPhone('')\n            const noty = {message: `Updated ${data.name}`, type: 'info'}\n            setNotification(noty)\n            setTimeout(() => {\n              setNotification(null)        \n            }, 5000)\n          })\n          .catch(() => {\n            const noty = {message: `Information of ${auxName.name} has already been removed from server`, type: 'error'}\n            setNotification(noty)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })  \n      }\n    } else {\n      const auxName = {name: newName, number: newPhone}\n      create(auxName)\n        .then(data => {\n          setPersons(persons.concat(data))\n          setNewName('')\n          setNewPhone('')\n          const noty = {message: `Added ${data.name}`, type: 'success'}\n          setNotification(noty)\n          setTimeout(() => {\n            setNotification(null)        \n          }, 5000)\n        })   \n    }\n  }\n\n\n  const removePerson = (id, name) => {\n    if(window.confirm(`Delete ${name} ?`)) {\n      remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          const noty = {message: `Removed ${name}`, type: 'success'}\n          setNotification(noty)\n          setTimeout(() => {\n            setNotification(null)        \n          }, 5000)\n        })\n    }\n  }\n\n  const handleChangeSearch = (e) => {\n    setSearch(e.target.value)\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n  const handlePhoneChange = (e) => {\n    setNewPhone(e.target.value)\n  }\n\n  const personsToShow = search.length === 0 ?\n    persons : \n    persons.filter(p => p.name.toLowerCase().indexOf(search.toLowerCase()) > -1 )\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter handleSearch={handleChangeSearch} search={search} />\n      <PersonsForm \n          handleNameChange={handleNameChange}\n         addPerson={addPerson} \n         handlePhoneChange={handlePhoneChange}\n         newName={newName}\n         newPhone={newPhone}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} remove={removePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}